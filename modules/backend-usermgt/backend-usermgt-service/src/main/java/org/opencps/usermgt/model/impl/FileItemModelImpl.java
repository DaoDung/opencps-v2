/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.usermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import org.opencps.usermgt.model.FileItem;
import org.opencps.usermgt.model.FileItemModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the FileItem service. Represents a row in the &quot;opencps_fileitem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link FileItemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FileItemImpl}.
 * </p>
 *
 * @author khoavu
 * @see FileItemImpl
 * @see FileItem
 * @see FileItemModel
 * @generated
 */
@ProviderType
public class FileItemModelImpl extends BaseModelImpl<FileItem>
	implements FileItemModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a file item model instance should use the {@link FileItem} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_fileitem";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "fileItemId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "fileTemplateNo", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "status", Types.INTEGER },
			{ "size_", Types.INTEGER },
			{ "fileType", Types.VARCHAR },
			{ "log_", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fileItemId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fileTemplateNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("size_", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("fileType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("log_", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_fileitem (uuid_ VARCHAR(75) null,fileItemId LONG not null primary key,createDate DATE null,modifiedDate DATE null,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(255) null,fileTemplateNo VARCHAR(128) null,name TEXT null,status INTEGER,size_ INTEGER,fileType VARCHAR(128) null,log_ TEXT null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_fileitem";
	public static final String ORDER_BY_JPQL = " ORDER BY fileItem.fileItemId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_fileitem.fileItemId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.usermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.usermgt.model.FileItem"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.usermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.usermgt.model.FileItem"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.usermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.usermgt.model.FileItem"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long FILETEMPLATENO_COLUMN_BITMASK = 2L;
	public static final long GROUPID_COLUMN_BITMASK = 4L;
	public static final long STATUS_COLUMN_BITMASK = 8L;
	public static final long UUID_COLUMN_BITMASK = 16L;
	public static final long FILEITEMID_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.usermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.usermgt.model.FileItem"));

	public FileItemModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _fileItemId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFileItemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _fileItemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FileItem.class;
	}

	@Override
	public String getModelClassName() {
		return FileItem.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("fileItemId", getFileItemId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("fileTemplateNo", getFileTemplateNo());
		attributes.put("name", getName());
		attributes.put("status", getStatus());
		attributes.put("size", getSize());
		attributes.put("fileType", getFileType());
		attributes.put("log", getLog());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long fileItemId = (Long)attributes.get("fileItemId");

		if (fileItemId != null) {
			setFileItemId(fileItemId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		String fileTemplateNo = (String)attributes.get("fileTemplateNo");

		if (fileTemplateNo != null) {
			setFileTemplateNo(fileTemplateNo);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Integer size = (Integer)attributes.get("size");

		if (size != null) {
			setSize(size);
		}

		String fileType = (String)attributes.get("fileType");

		if (fileType != null) {
			setFileType(fileType);
		}

		String log = (String)attributes.get("log");

		if (log != null) {
			setLog(log);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getFileItemId() {
		return _fileItemId;
	}

	@Override
	public void setFileItemId(long fileItemId) {
		_fileItemId = fileItemId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public String getFileTemplateNo() {
		if (_fileTemplateNo == null) {
			return "";
		}
		else {
			return _fileTemplateNo;
		}
	}

	@Override
	public void setFileTemplateNo(String fileTemplateNo) {
		_columnBitmask |= FILETEMPLATENO_COLUMN_BITMASK;

		if (_originalFileTemplateNo == null) {
			_originalFileTemplateNo = _fileTemplateNo;
		}

		_fileTemplateNo = fileTemplateNo;
	}

	public String getOriginalFileTemplateNo() {
		return GetterUtil.getString(_originalFileTemplateNo);
	}

	@Override
	public String getName() {
		if (_name == null) {
			return "";
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	@Override
	public int getSize() {
		return _size;
	}

	@Override
	public void setSize(int size) {
		_size = size;
	}

	@Override
	public String getFileType() {
		if (_fileType == null) {
			return "";
		}
		else {
			return _fileType;
		}
	}

	@Override
	public void setFileType(String fileType) {
		_fileType = fileType;
	}

	@Override
	public String getLog() {
		if (_log == null) {
			return "";
		}
		else {
			return _log;
		}
	}

	@Override
	public void setLog(String log) {
		_log = log;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				FileItem.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			FileItem.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FileItem toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (FileItem)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FileItemImpl fileItemImpl = new FileItemImpl();

		fileItemImpl.setUuid(getUuid());
		fileItemImpl.setFileItemId(getFileItemId());
		fileItemImpl.setCreateDate(getCreateDate());
		fileItemImpl.setModifiedDate(getModifiedDate());
		fileItemImpl.setCompanyId(getCompanyId());
		fileItemImpl.setGroupId(getGroupId());
		fileItemImpl.setUserId(getUserId());
		fileItemImpl.setUserName(getUserName());
		fileItemImpl.setFileTemplateNo(getFileTemplateNo());
		fileItemImpl.setName(getName());
		fileItemImpl.setStatus(getStatus());
		fileItemImpl.setSize(getSize());
		fileItemImpl.setFileType(getFileType());
		fileItemImpl.setLog(getLog());

		fileItemImpl.resetOriginalValues();

		return fileItemImpl;
	}

	@Override
	public int compareTo(FileItem fileItem) {
		long primaryKey = fileItem.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof FileItem)) {
			return false;
		}

		FileItem fileItem = (FileItem)obj;

		long primaryKey = fileItem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		FileItemModelImpl fileItemModelImpl = this;

		fileItemModelImpl._originalUuid = fileItemModelImpl._uuid;

		fileItemModelImpl._setModifiedDate = false;

		fileItemModelImpl._originalCompanyId = fileItemModelImpl._companyId;

		fileItemModelImpl._setOriginalCompanyId = false;

		fileItemModelImpl._originalGroupId = fileItemModelImpl._groupId;

		fileItemModelImpl._setOriginalGroupId = false;

		fileItemModelImpl._originalFileTemplateNo = fileItemModelImpl._fileTemplateNo;

		fileItemModelImpl._originalStatus = fileItemModelImpl._status;

		fileItemModelImpl._setOriginalStatus = false;

		fileItemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<FileItem> toCacheModel() {
		FileItemCacheModel fileItemCacheModel = new FileItemCacheModel();

		fileItemCacheModel.uuid = getUuid();

		String uuid = fileItemCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			fileItemCacheModel.uuid = null;
		}

		fileItemCacheModel.fileItemId = getFileItemId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			fileItemCacheModel.createDate = createDate.getTime();
		}
		else {
			fileItemCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			fileItemCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			fileItemCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		fileItemCacheModel.companyId = getCompanyId();

		fileItemCacheModel.groupId = getGroupId();

		fileItemCacheModel.userId = getUserId();

		fileItemCacheModel.userName = getUserName();

		String userName = fileItemCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			fileItemCacheModel.userName = null;
		}

		fileItemCacheModel.fileTemplateNo = getFileTemplateNo();

		String fileTemplateNo = fileItemCacheModel.fileTemplateNo;

		if ((fileTemplateNo != null) && (fileTemplateNo.length() == 0)) {
			fileItemCacheModel.fileTemplateNo = null;
		}

		fileItemCacheModel.name = getName();

		String name = fileItemCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			fileItemCacheModel.name = null;
		}

		fileItemCacheModel.status = getStatus();

		fileItemCacheModel.size = getSize();

		fileItemCacheModel.fileType = getFileType();

		String fileType = fileItemCacheModel.fileType;

		if ((fileType != null) && (fileType.length() == 0)) {
			fileItemCacheModel.fileType = null;
		}

		fileItemCacheModel.log = getLog();

		String log = fileItemCacheModel.log;

		if ((log != null) && (log.length() == 0)) {
			fileItemCacheModel.log = null;
		}

		return fileItemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", fileItemId=");
		sb.append(getFileItemId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", fileTemplateNo=");
		sb.append(getFileTemplateNo());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", size=");
		sb.append(getSize());
		sb.append(", fileType=");
		sb.append(getFileType());
		sb.append(", log=");
		sb.append(getLog());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("org.opencps.usermgt.model.FileItem");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileItemId</column-name><column-value><![CDATA[");
		sb.append(getFileItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileTemplateNo</column-name><column-value><![CDATA[");
		sb.append(getFileTemplateNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>size</column-name><column-value><![CDATA[");
		sb.append(getSize());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileType</column-name><column-value><![CDATA[");
		sb.append(getFileType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>log</column-name><column-value><![CDATA[");
		sb.append(getLog());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = FileItem.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			FileItem.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _fileItemId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userName;
	private String _fileTemplateNo;
	private String _originalFileTemplateNo;
	private String _name;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private int _size;
	private String _fileType;
	private String _log;
	private long _columnBitmask;
	private FileItem _escapedModel;
}