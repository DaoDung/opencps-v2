/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.deliverable.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import org.opencps.deliverable.model.OpenCPSDeliverableType;
import org.opencps.deliverable.model.OpenCPSDeliverableTypeModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the OpenCPSDeliverableType service. Represents a row in the &quot;opencps_deliverabletype&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link OpenCPSDeliverableTypeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OpenCPSDeliverableTypeImpl}.
 * </p>
 *
 * @author binhth
 * @see OpenCPSDeliverableTypeImpl
 * @see OpenCPSDeliverableType
 * @see OpenCPSDeliverableTypeModel
 * @generated
 */
@ProviderType
public class OpenCPSDeliverableTypeModelImpl extends BaseModelImpl<OpenCPSDeliverableType>
	implements OpenCPSDeliverableTypeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a open cps deliverable type model instance should use the {@link OpenCPSDeliverableType} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_deliverabletype";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "deliverableTypeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "typeCode", Types.VARCHAR },
			{ "typeName", Types.VARCHAR },
			{ "formScriptFileId", Types.BIGINT },
			{ "formReportFileId", Types.BIGINT },
			{ "codePattern", Types.VARCHAR },
			{ "counter", Types.BIGINT },
			{ "mappingData", Types.VARCHAR },
			{ "dataConfig", Types.VARCHAR },
			{ "tableConfig", Types.VARCHAR },
			{ "docSync", Types.INTEGER },
			{ "govAgencies", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("deliverableTypeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("typeCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("typeName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("formScriptFileId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("formReportFileId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("codePattern", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("counter", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("mappingData", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dataConfig", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tableConfig", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("docSync", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("govAgencies", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_deliverabletype (uuid_ VARCHAR(75) null,deliverableTypeId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,typeCode VARCHAR(75) null,typeName VARCHAR(75) null,formScriptFileId LONG,formReportFileId LONG,codePattern VARCHAR(75) null,counter LONG,mappingData VARCHAR(75) null,dataConfig VARCHAR(75) null,tableConfig VARCHAR(75) null,docSync INTEGER,govAgencies VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_deliverabletype";
	public static final String ORDER_BY_JPQL = " ORDER BY openCPSDeliverableType.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_deliverabletype.createDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(backend.deliverable.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.deliverable.model.OpenCPSDeliverableType"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(backend.deliverable.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.deliverable.model.OpenCPSDeliverableType"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(backend.deliverable.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.deliverable.model.OpenCPSDeliverableType"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long TYPECODE_COLUMN_BITMASK = 4L;
	public static final long UUID_COLUMN_BITMASK = 8L;
	public static final long CREATEDATE_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(backend.deliverable.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.deliverable.model.OpenCPSDeliverableType"));

	public OpenCPSDeliverableTypeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _deliverableTypeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDeliverableTypeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _deliverableTypeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return OpenCPSDeliverableType.class;
	}

	@Override
	public String getModelClassName() {
		return OpenCPSDeliverableType.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("deliverableTypeId", getDeliverableTypeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("typeCode", getTypeCode());
		attributes.put("typeName", getTypeName());
		attributes.put("formScriptFileId", getFormScriptFileId());
		attributes.put("formReportFileId", getFormReportFileId());
		attributes.put("codePattern", getCodePattern());
		attributes.put("counter", getCounter());
		attributes.put("mappingData", getMappingData());
		attributes.put("dataConfig", getDataConfig());
		attributes.put("tableConfig", getTableConfig());
		attributes.put("docSync", getDocSync());
		attributes.put("govAgencies", getGovAgencies());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long deliverableTypeId = (Long)attributes.get("deliverableTypeId");

		if (deliverableTypeId != null) {
			setDeliverableTypeId(deliverableTypeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String typeCode = (String)attributes.get("typeCode");

		if (typeCode != null) {
			setTypeCode(typeCode);
		}

		String typeName = (String)attributes.get("typeName");

		if (typeName != null) {
			setTypeName(typeName);
		}

		Long formScriptFileId = (Long)attributes.get("formScriptFileId");

		if (formScriptFileId != null) {
			setFormScriptFileId(formScriptFileId);
		}

		Long formReportFileId = (Long)attributes.get("formReportFileId");

		if (formReportFileId != null) {
			setFormReportFileId(formReportFileId);
		}

		String codePattern = (String)attributes.get("codePattern");

		if (codePattern != null) {
			setCodePattern(codePattern);
		}

		Long counter = (Long)attributes.get("counter");

		if (counter != null) {
			setCounter(counter);
		}

		String mappingData = (String)attributes.get("mappingData");

		if (mappingData != null) {
			setMappingData(mappingData);
		}

		String dataConfig = (String)attributes.get("dataConfig");

		if (dataConfig != null) {
			setDataConfig(dataConfig);
		}

		String tableConfig = (String)attributes.get("tableConfig");

		if (tableConfig != null) {
			setTableConfig(tableConfig);
		}

		Integer docSync = (Integer)attributes.get("docSync");

		if (docSync != null) {
			setDocSync(docSync);
		}

		String govAgencies = (String)attributes.get("govAgencies");

		if (govAgencies != null) {
			setGovAgencies(govAgencies);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getDeliverableTypeId() {
		return _deliverableTypeId;
	}

	@Override
	public void setDeliverableTypeId(long deliverableTypeId) {
		_deliverableTypeId = deliverableTypeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getTypeCode() {
		if (_typeCode == null) {
			return "";
		}
		else {
			return _typeCode;
		}
	}

	@Override
	public void setTypeCode(String typeCode) {
		_columnBitmask |= TYPECODE_COLUMN_BITMASK;

		if (_originalTypeCode == null) {
			_originalTypeCode = _typeCode;
		}

		_typeCode = typeCode;
	}

	public String getOriginalTypeCode() {
		return GetterUtil.getString(_originalTypeCode);
	}

	@Override
	public String getTypeName() {
		if (_typeName == null) {
			return "";
		}
		else {
			return _typeName;
		}
	}

	@Override
	public void setTypeName(String typeName) {
		_typeName = typeName;
	}

	@Override
	public long getFormScriptFileId() {
		return _formScriptFileId;
	}

	@Override
	public void setFormScriptFileId(long formScriptFileId) {
		_formScriptFileId = formScriptFileId;
	}

	@Override
	public long getFormReportFileId() {
		return _formReportFileId;
	}

	@Override
	public void setFormReportFileId(long formReportFileId) {
		_formReportFileId = formReportFileId;
	}

	@Override
	public String getCodePattern() {
		if (_codePattern == null) {
			return "";
		}
		else {
			return _codePattern;
		}
	}

	@Override
	public void setCodePattern(String codePattern) {
		_codePattern = codePattern;
	}

	@Override
	public long getCounter() {
		return _counter;
	}

	@Override
	public void setCounter(long counter) {
		_counter = counter;
	}

	@Override
	public String getMappingData() {
		if (_mappingData == null) {
			return "";
		}
		else {
			return _mappingData;
		}
	}

	@Override
	public void setMappingData(String mappingData) {
		_mappingData = mappingData;
	}

	@Override
	public String getDataConfig() {
		if (_dataConfig == null) {
			return "";
		}
		else {
			return _dataConfig;
		}
	}

	@Override
	public void setDataConfig(String dataConfig) {
		_dataConfig = dataConfig;
	}

	@Override
	public String getTableConfig() {
		if (_tableConfig == null) {
			return "";
		}
		else {
			return _tableConfig;
		}
	}

	@Override
	public void setTableConfig(String tableConfig) {
		_tableConfig = tableConfig;
	}

	@Override
	public int getDocSync() {
		return _docSync;
	}

	@Override
	public void setDocSync(int docSync) {
		_docSync = docSync;
	}

	@Override
	public String getGovAgencies() {
		if (_govAgencies == null) {
			return "";
		}
		else {
			return _govAgencies;
		}
	}

	@Override
	public void setGovAgencies(String govAgencies) {
		_govAgencies = govAgencies;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				OpenCPSDeliverableType.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			OpenCPSDeliverableType.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public OpenCPSDeliverableType toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (OpenCPSDeliverableType)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OpenCPSDeliverableTypeImpl openCPSDeliverableTypeImpl = new OpenCPSDeliverableTypeImpl();

		openCPSDeliverableTypeImpl.setUuid(getUuid());
		openCPSDeliverableTypeImpl.setDeliverableTypeId(getDeliverableTypeId());
		openCPSDeliverableTypeImpl.setGroupId(getGroupId());
		openCPSDeliverableTypeImpl.setCompanyId(getCompanyId());
		openCPSDeliverableTypeImpl.setUserId(getUserId());
		openCPSDeliverableTypeImpl.setUserName(getUserName());
		openCPSDeliverableTypeImpl.setCreateDate(getCreateDate());
		openCPSDeliverableTypeImpl.setModifiedDate(getModifiedDate());
		openCPSDeliverableTypeImpl.setTypeCode(getTypeCode());
		openCPSDeliverableTypeImpl.setTypeName(getTypeName());
		openCPSDeliverableTypeImpl.setFormScriptFileId(getFormScriptFileId());
		openCPSDeliverableTypeImpl.setFormReportFileId(getFormReportFileId());
		openCPSDeliverableTypeImpl.setCodePattern(getCodePattern());
		openCPSDeliverableTypeImpl.setCounter(getCounter());
		openCPSDeliverableTypeImpl.setMappingData(getMappingData());
		openCPSDeliverableTypeImpl.setDataConfig(getDataConfig());
		openCPSDeliverableTypeImpl.setTableConfig(getTableConfig());
		openCPSDeliverableTypeImpl.setDocSync(getDocSync());
		openCPSDeliverableTypeImpl.setGovAgencies(getGovAgencies());

		openCPSDeliverableTypeImpl.resetOriginalValues();

		return openCPSDeliverableTypeImpl;
	}

	@Override
	public int compareTo(OpenCPSDeliverableType openCPSDeliverableType) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				openCPSDeliverableType.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof OpenCPSDeliverableType)) {
			return false;
		}

		OpenCPSDeliverableType openCPSDeliverableType = (OpenCPSDeliverableType)obj;

		long primaryKey = openCPSDeliverableType.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		OpenCPSDeliverableTypeModelImpl openCPSDeliverableTypeModelImpl = this;

		openCPSDeliverableTypeModelImpl._originalUuid = openCPSDeliverableTypeModelImpl._uuid;

		openCPSDeliverableTypeModelImpl._originalGroupId = openCPSDeliverableTypeModelImpl._groupId;

		openCPSDeliverableTypeModelImpl._setOriginalGroupId = false;

		openCPSDeliverableTypeModelImpl._originalCompanyId = openCPSDeliverableTypeModelImpl._companyId;

		openCPSDeliverableTypeModelImpl._setOriginalCompanyId = false;

		openCPSDeliverableTypeModelImpl._setModifiedDate = false;

		openCPSDeliverableTypeModelImpl._originalTypeCode = openCPSDeliverableTypeModelImpl._typeCode;

		openCPSDeliverableTypeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<OpenCPSDeliverableType> toCacheModel() {
		OpenCPSDeliverableTypeCacheModel openCPSDeliverableTypeCacheModel = new OpenCPSDeliverableTypeCacheModel();

		openCPSDeliverableTypeCacheModel.uuid = getUuid();

		String uuid = openCPSDeliverableTypeCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			openCPSDeliverableTypeCacheModel.uuid = null;
		}

		openCPSDeliverableTypeCacheModel.deliverableTypeId = getDeliverableTypeId();

		openCPSDeliverableTypeCacheModel.groupId = getGroupId();

		openCPSDeliverableTypeCacheModel.companyId = getCompanyId();

		openCPSDeliverableTypeCacheModel.userId = getUserId();

		openCPSDeliverableTypeCacheModel.userName = getUserName();

		String userName = openCPSDeliverableTypeCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			openCPSDeliverableTypeCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			openCPSDeliverableTypeCacheModel.createDate = createDate.getTime();
		}
		else {
			openCPSDeliverableTypeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			openCPSDeliverableTypeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			openCPSDeliverableTypeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		openCPSDeliverableTypeCacheModel.typeCode = getTypeCode();

		String typeCode = openCPSDeliverableTypeCacheModel.typeCode;

		if ((typeCode != null) && (typeCode.length() == 0)) {
			openCPSDeliverableTypeCacheModel.typeCode = null;
		}

		openCPSDeliverableTypeCacheModel.typeName = getTypeName();

		String typeName = openCPSDeliverableTypeCacheModel.typeName;

		if ((typeName != null) && (typeName.length() == 0)) {
			openCPSDeliverableTypeCacheModel.typeName = null;
		}

		openCPSDeliverableTypeCacheModel.formScriptFileId = getFormScriptFileId();

		openCPSDeliverableTypeCacheModel.formReportFileId = getFormReportFileId();

		openCPSDeliverableTypeCacheModel.codePattern = getCodePattern();

		String codePattern = openCPSDeliverableTypeCacheModel.codePattern;

		if ((codePattern != null) && (codePattern.length() == 0)) {
			openCPSDeliverableTypeCacheModel.codePattern = null;
		}

		openCPSDeliverableTypeCacheModel.counter = getCounter();

		openCPSDeliverableTypeCacheModel.mappingData = getMappingData();

		String mappingData = openCPSDeliverableTypeCacheModel.mappingData;

		if ((mappingData != null) && (mappingData.length() == 0)) {
			openCPSDeliverableTypeCacheModel.mappingData = null;
		}

		openCPSDeliverableTypeCacheModel.dataConfig = getDataConfig();

		String dataConfig = openCPSDeliverableTypeCacheModel.dataConfig;

		if ((dataConfig != null) && (dataConfig.length() == 0)) {
			openCPSDeliverableTypeCacheModel.dataConfig = null;
		}

		openCPSDeliverableTypeCacheModel.tableConfig = getTableConfig();

		String tableConfig = openCPSDeliverableTypeCacheModel.tableConfig;

		if ((tableConfig != null) && (tableConfig.length() == 0)) {
			openCPSDeliverableTypeCacheModel.tableConfig = null;
		}

		openCPSDeliverableTypeCacheModel.docSync = getDocSync();

		openCPSDeliverableTypeCacheModel.govAgencies = getGovAgencies();

		String govAgencies = openCPSDeliverableTypeCacheModel.govAgencies;

		if ((govAgencies != null) && (govAgencies.length() == 0)) {
			openCPSDeliverableTypeCacheModel.govAgencies = null;
		}

		return openCPSDeliverableTypeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", deliverableTypeId=");
		sb.append(getDeliverableTypeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", typeCode=");
		sb.append(getTypeCode());
		sb.append(", typeName=");
		sb.append(getTypeName());
		sb.append(", formScriptFileId=");
		sb.append(getFormScriptFileId());
		sb.append(", formReportFileId=");
		sb.append(getFormReportFileId());
		sb.append(", codePattern=");
		sb.append(getCodePattern());
		sb.append(", counter=");
		sb.append(getCounter());
		sb.append(", mappingData=");
		sb.append(getMappingData());
		sb.append(", dataConfig=");
		sb.append(getDataConfig());
		sb.append(", tableConfig=");
		sb.append(getTableConfig());
		sb.append(", docSync=");
		sb.append(getDocSync());
		sb.append(", govAgencies=");
		sb.append(getGovAgencies());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("org.opencps.deliverable.model.OpenCPSDeliverableType");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deliverableTypeId</column-name><column-value><![CDATA[");
		sb.append(getDeliverableTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typeCode</column-name><column-value><![CDATA[");
		sb.append(getTypeCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typeName</column-name><column-value><![CDATA[");
		sb.append(getTypeName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formScriptFileId</column-name><column-value><![CDATA[");
		sb.append(getFormScriptFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formReportFileId</column-name><column-value><![CDATA[");
		sb.append(getFormReportFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codePattern</column-name><column-value><![CDATA[");
		sb.append(getCodePattern());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>counter</column-name><column-value><![CDATA[");
		sb.append(getCounter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingData</column-name><column-value><![CDATA[");
		sb.append(getMappingData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dataConfig</column-name><column-value><![CDATA[");
		sb.append(getDataConfig());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tableConfig</column-name><column-value><![CDATA[");
		sb.append(getTableConfig());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>docSync</column-name><column-value><![CDATA[");
		sb.append(getDocSync());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencies</column-name><column-value><![CDATA[");
		sb.append(getGovAgencies());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = OpenCPSDeliverableType.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			OpenCPSDeliverableType.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _deliverableTypeId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _typeCode;
	private String _originalTypeCode;
	private String _typeName;
	private long _formScriptFileId;
	private long _formReportFileId;
	private String _codePattern;
	private long _counter;
	private String _mappingData;
	private String _dataConfig;
	private String _tableConfig;
	private int _docSync;
	private String _govAgencies;
	private long _columnBitmask;
	private OpenCPSDeliverableType _escapedModel;
}