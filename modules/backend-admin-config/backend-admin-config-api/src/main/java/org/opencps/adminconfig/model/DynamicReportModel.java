/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.adminconfig.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DynamicReport service. Represents a row in the &quot;opencps_dynamicreport&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.opencps.adminconfig.model.impl.DynamicReportModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.opencps.adminconfig.model.impl.DynamicReportImpl}.
 * </p>
 *
 * @author binhth
 * @see DynamicReport
 * @see org.opencps.adminconfig.model.impl.DynamicReportImpl
 * @see org.opencps.adminconfig.model.impl.DynamicReportModelImpl
 * @generated
 */
@ProviderType
public interface DynamicReportModel extends BaseModel<DynamicReport>,
	GroupedModel, ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a dynamic report model instance should use the {@link DynamicReport} interface instead.
	 */

	/**
	 * Returns the primary key of this dynamic report.
	 *
	 * @return the primary key of this dynamic report
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this dynamic report.
	 *
	 * @param primaryKey the primary key of this dynamic report
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the dynamic report ID of this dynamic report.
	 *
	 * @return the dynamic report ID of this dynamic report
	 */
	public long getDynamicReportId();

	/**
	 * Sets the dynamic report ID of this dynamic report.
	 *
	 * @param dynamicReportId the dynamic report ID of this dynamic report
	 */
	public void setDynamicReportId(long dynamicReportId);

	/**
	 * Returns the group ID of this dynamic report.
	 *
	 * @return the group ID of this dynamic report
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this dynamic report.
	 *
	 * @param groupId the group ID of this dynamic report
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this dynamic report.
	 *
	 * @return the company ID of this dynamic report
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this dynamic report.
	 *
	 * @param companyId the company ID of this dynamic report
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this dynamic report.
	 *
	 * @return the user ID of this dynamic report
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this dynamic report.
	 *
	 * @param userId the user ID of this dynamic report
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this dynamic report.
	 *
	 * @return the user uuid of this dynamic report
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this dynamic report.
	 *
	 * @param userUuid the user uuid of this dynamic report
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this dynamic report.
	 *
	 * @return the user name of this dynamic report
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this dynamic report.
	 *
	 * @param userName the user name of this dynamic report
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this dynamic report.
	 *
	 * @return the create date of this dynamic report
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this dynamic report.
	 *
	 * @param createDate the create date of this dynamic report
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this dynamic report.
	 *
	 * @return the modified date of this dynamic report
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this dynamic report.
	 *
	 * @param modifiedDate the modified date of this dynamic report
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the sharing of this dynamic report.
	 *
	 * @return the sharing of this dynamic report
	 */
	public int getSharing();

	/**
	 * Sets the sharing of this dynamic report.
	 *
	 * @param sharing the sharing of this dynamic report
	 */
	public void setSharing(int sharing);

	/**
	 * Returns the report name of this dynamic report.
	 *
	 * @return the report name of this dynamic report
	 */
	@AutoEscape
	public String getReportName();

	/**
	 * Sets the report name of this dynamic report.
	 *
	 * @param reportName the report name of this dynamic report
	 */
	public void setReportName(String reportName);

	/**
	 * Returns the report code of this dynamic report.
	 *
	 * @return the report code of this dynamic report
	 */
	@AutoEscape
	public String getReportCode();

	/**
	 * Sets the report code of this dynamic report.
	 *
	 * @param reportCode the report code of this dynamic report
	 */
	public void setReportCode(String reportCode);

	/**
	 * Returns the filter config of this dynamic report.
	 *
	 * @return the filter config of this dynamic report
	 */
	@AutoEscape
	public String getFilterConfig();

	/**
	 * Sets the filter config of this dynamic report.
	 *
	 * @param filterConfig the filter config of this dynamic report
	 */
	public void setFilterConfig(String filterConfig);

	/**
	 * Returns the table config of this dynamic report.
	 *
	 * @return the table config of this dynamic report
	 */
	@AutoEscape
	public String getTableConfig();

	/**
	 * Sets the table config of this dynamic report.
	 *
	 * @param tableConfig the table config of this dynamic report
	 */
	public void setTableConfig(String tableConfig);

	/**
	 * Returns the user config of this dynamic report.
	 *
	 * @return the user config of this dynamic report
	 */
	@AutoEscape
	public String getUserConfig();

	/**
	 * Sets the user config of this dynamic report.
	 *
	 * @param userConfig the user config of this dynamic report
	 */
	public void setUserConfig(String userConfig);

	/**
	 * Returns the report type of this dynamic report.
	 *
	 * @return the report type of this dynamic report
	 */
	@AutoEscape
	public String getReportType();

	/**
	 * Sets the report type of this dynamic report.
	 *
	 * @param reportType the report type of this dynamic report
	 */
	public void setReportType(String reportType);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(DynamicReport dynamicReport);

	@Override
	public int hashCode();

	@Override
	public CacheModel<DynamicReport> toCacheModel();

	@Override
	public DynamicReport toEscapedModel();

	@Override
	public DynamicReport toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}