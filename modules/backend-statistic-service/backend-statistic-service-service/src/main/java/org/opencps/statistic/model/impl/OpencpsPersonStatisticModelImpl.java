/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.statistic.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import org.opencps.statistic.model.OpencpsPersonStatistic;
import org.opencps.statistic.model.OpencpsPersonStatisticModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the OpencpsPersonStatistic service. Represents a row in the &quot;opencps_person_statistic&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link OpencpsPersonStatisticModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OpencpsPersonStatisticImpl}.
 * </p>
 *
 * @author khoavu
 * @see OpencpsPersonStatisticImpl
 * @see OpencpsPersonStatistic
 * @see OpencpsPersonStatisticModel
 * @generated
 */
@ProviderType
public class OpencpsPersonStatisticModelImpl extends BaseModelImpl<OpencpsPersonStatistic>
	implements OpencpsPersonStatisticModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a opencps person statistic model instance should use the {@link OpencpsPersonStatistic} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_person_statistic";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "personStatisticId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "month", Types.INTEGER },
			{ "year", Types.INTEGER },
			{ "govAgencyCode", Types.VARCHAR },
			{ "govAgencyName", Types.VARCHAR },
			{ "employeeId", Types.BIGINT },
			{ "votingCode", Types.VARCHAR },
			{ "votingSubject", Types.VARCHAR },
			{ "totalVoted", Types.INTEGER },
			{ "veryGoodCount", Types.INTEGER },
			{ "goodCount", Types.INTEGER },
			{ "badCount", Types.INTEGER },
			{ "percentVeryGood", Types.INTEGER },
			{ "percentGood", Types.INTEGER },
			{ "percentBad", Types.INTEGER },
			{ "totalCount", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("personStatisticId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("month", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("year", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("govAgencyCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("govAgencyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("employeeId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("votingCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("votingSubject", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("totalVoted", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("veryGoodCount", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("goodCount", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("badCount", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("percentVeryGood", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("percentGood", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("percentBad", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("totalCount", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_person_statistic (uuid_ VARCHAR(75) null,personStatisticId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,month INTEGER,year INTEGER,govAgencyCode VARCHAR(75) null,govAgencyName VARCHAR(75) null,employeeId LONG,votingCode VARCHAR(75) null,votingSubject VARCHAR(75) null,totalVoted INTEGER,veryGoodCount INTEGER,goodCount INTEGER,badCount INTEGER,percentVeryGood INTEGER,percentGood INTEGER,percentBad INTEGER,totalCount INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table opencps_person_statistic";
	public static final String ORDER_BY_JPQL = " ORDER BY opencpsPersonStatistic.personStatisticId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_person_statistic.personStatisticId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(StatisticService.backend.statistic.service.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.statistic.model.OpencpsPersonStatistic"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(StatisticService.backend.statistic.service.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.statistic.model.OpencpsPersonStatistic"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(StatisticService.backend.statistic.service.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.statistic.model.OpencpsPersonStatistic"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long EMPLOYEEID_COLUMN_BITMASK = 2L;
	public static final long GOVAGENCYCODE_COLUMN_BITMASK = 4L;
	public static final long GROUPID_COLUMN_BITMASK = 8L;
	public static final long MONTH_COLUMN_BITMASK = 16L;
	public static final long USERID_COLUMN_BITMASK = 32L;
	public static final long UUID_COLUMN_BITMASK = 64L;
	public static final long YEAR_COLUMN_BITMASK = 128L;
	public static final long PERSONSTATISTICID_COLUMN_BITMASK = 256L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(StatisticService.backend.statistic.service.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.statistic.model.OpencpsPersonStatistic"));

	public OpencpsPersonStatisticModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _personStatisticId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPersonStatisticId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _personStatisticId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return OpencpsPersonStatistic.class;
	}

	@Override
	public String getModelClassName() {
		return OpencpsPersonStatistic.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("personStatisticId", getPersonStatisticId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("month", getMonth());
		attributes.put("year", getYear());
		attributes.put("govAgencyCode", getGovAgencyCode());
		attributes.put("govAgencyName", getGovAgencyName());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("votingCode", getVotingCode());
		attributes.put("votingSubject", getVotingSubject());
		attributes.put("totalVoted", getTotalVoted());
		attributes.put("veryGoodCount", getVeryGoodCount());
		attributes.put("goodCount", getGoodCount());
		attributes.put("badCount", getBadCount());
		attributes.put("percentVeryGood", getPercentVeryGood());
		attributes.put("percentGood", getPercentGood());
		attributes.put("percentBad", getPercentBad());
		attributes.put("totalCount", getTotalCount());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long personStatisticId = (Long)attributes.get("personStatisticId");

		if (personStatisticId != null) {
			setPersonStatisticId(personStatisticId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer month = (Integer)attributes.get("month");

		if (month != null) {
			setMonth(month);
		}

		Integer year = (Integer)attributes.get("year");

		if (year != null) {
			setYear(year);
		}

		String govAgencyCode = (String)attributes.get("govAgencyCode");

		if (govAgencyCode != null) {
			setGovAgencyCode(govAgencyCode);
		}

		String govAgencyName = (String)attributes.get("govAgencyName");

		if (govAgencyName != null) {
			setGovAgencyName(govAgencyName);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		String votingCode = (String)attributes.get("votingCode");

		if (votingCode != null) {
			setVotingCode(votingCode);
		}

		String votingSubject = (String)attributes.get("votingSubject");

		if (votingSubject != null) {
			setVotingSubject(votingSubject);
		}

		Integer totalVoted = (Integer)attributes.get("totalVoted");

		if (totalVoted != null) {
			setTotalVoted(totalVoted);
		}

		Integer veryGoodCount = (Integer)attributes.get("veryGoodCount");

		if (veryGoodCount != null) {
			setVeryGoodCount(veryGoodCount);
		}

		Integer goodCount = (Integer)attributes.get("goodCount");

		if (goodCount != null) {
			setGoodCount(goodCount);
		}

		Integer badCount = (Integer)attributes.get("badCount");

		if (badCount != null) {
			setBadCount(badCount);
		}

		Integer percentVeryGood = (Integer)attributes.get("percentVeryGood");

		if (percentVeryGood != null) {
			setPercentVeryGood(percentVeryGood);
		}

		Integer percentGood = (Integer)attributes.get("percentGood");

		if (percentGood != null) {
			setPercentGood(percentGood);
		}

		Integer percentBad = (Integer)attributes.get("percentBad");

		if (percentBad != null) {
			setPercentBad(percentBad);
		}

		Integer totalCount = (Integer)attributes.get("totalCount");

		if (totalCount != null) {
			setTotalCount(totalCount);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getPersonStatisticId() {
		return _personStatisticId;
	}

	@Override
	public void setPersonStatisticId(long personStatisticId) {
		_personStatisticId = personStatisticId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public int getMonth() {
		return _month;
	}

	@Override
	public void setMonth(int month) {
		_columnBitmask |= MONTH_COLUMN_BITMASK;

		if (!_setOriginalMonth) {
			_setOriginalMonth = true;

			_originalMonth = _month;
		}

		_month = month;
	}

	public int getOriginalMonth() {
		return _originalMonth;
	}

	@Override
	public int getYear() {
		return _year;
	}

	@Override
	public void setYear(int year) {
		_columnBitmask |= YEAR_COLUMN_BITMASK;

		if (!_setOriginalYear) {
			_setOriginalYear = true;

			_originalYear = _year;
		}

		_year = year;
	}

	public int getOriginalYear() {
		return _originalYear;
	}

	@Override
	public String getGovAgencyCode() {
		if (_govAgencyCode == null) {
			return "";
		}
		else {
			return _govAgencyCode;
		}
	}

	@Override
	public void setGovAgencyCode(String govAgencyCode) {
		_columnBitmask |= GOVAGENCYCODE_COLUMN_BITMASK;

		if (_originalGovAgencyCode == null) {
			_originalGovAgencyCode = _govAgencyCode;
		}

		_govAgencyCode = govAgencyCode;
	}

	public String getOriginalGovAgencyCode() {
		return GetterUtil.getString(_originalGovAgencyCode);
	}

	@Override
	public String getGovAgencyName() {
		if (_govAgencyName == null) {
			return "";
		}
		else {
			return _govAgencyName;
		}
	}

	@Override
	public void setGovAgencyName(String govAgencyName) {
		_govAgencyName = govAgencyName;
	}

	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_columnBitmask |= EMPLOYEEID_COLUMN_BITMASK;

		if (!_setOriginalEmployeeId) {
			_setOriginalEmployeeId = true;

			_originalEmployeeId = _employeeId;
		}

		_employeeId = employeeId;
	}

	public long getOriginalEmployeeId() {
		return _originalEmployeeId;
	}

	@Override
	public String getVotingCode() {
		if (_votingCode == null) {
			return "";
		}
		else {
			return _votingCode;
		}
	}

	@Override
	public void setVotingCode(String votingCode) {
		_votingCode = votingCode;
	}

	@Override
	public String getVotingSubject() {
		if (_votingSubject == null) {
			return "";
		}
		else {
			return _votingSubject;
		}
	}

	@Override
	public void setVotingSubject(String votingSubject) {
		_votingSubject = votingSubject;
	}

	@Override
	public int getTotalVoted() {
		return _totalVoted;
	}

	@Override
	public void setTotalVoted(int totalVoted) {
		_totalVoted = totalVoted;
	}

	@Override
	public int getVeryGoodCount() {
		return _veryGoodCount;
	}

	@Override
	public void setVeryGoodCount(int veryGoodCount) {
		_veryGoodCount = veryGoodCount;
	}

	@Override
	public int getGoodCount() {
		return _goodCount;
	}

	@Override
	public void setGoodCount(int goodCount) {
		_goodCount = goodCount;
	}

	@Override
	public int getBadCount() {
		return _badCount;
	}

	@Override
	public void setBadCount(int badCount) {
		_badCount = badCount;
	}

	@Override
	public int getPercentVeryGood() {
		return _percentVeryGood;
	}

	@Override
	public void setPercentVeryGood(int percentVeryGood) {
		_percentVeryGood = percentVeryGood;
	}

	@Override
	public int getPercentGood() {
		return _percentGood;
	}

	@Override
	public void setPercentGood(int percentGood) {
		_percentGood = percentGood;
	}

	@Override
	public int getPercentBad() {
		return _percentBad;
	}

	@Override
	public void setPercentBad(int percentBad) {
		_percentBad = percentBad;
	}

	@Override
	public int getTotalCount() {
		return _totalCount;
	}

	@Override
	public void setTotalCount(int totalCount) {
		_totalCount = totalCount;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				OpencpsPersonStatistic.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			OpencpsPersonStatistic.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public OpencpsPersonStatistic toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (OpencpsPersonStatistic)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OpencpsPersonStatisticImpl opencpsPersonStatisticImpl = new OpencpsPersonStatisticImpl();

		opencpsPersonStatisticImpl.setUuid(getUuid());
		opencpsPersonStatisticImpl.setPersonStatisticId(getPersonStatisticId());
		opencpsPersonStatisticImpl.setCompanyId(getCompanyId());
		opencpsPersonStatisticImpl.setGroupId(getGroupId());
		opencpsPersonStatisticImpl.setUserId(getUserId());
		opencpsPersonStatisticImpl.setUserName(getUserName());
		opencpsPersonStatisticImpl.setCreateDate(getCreateDate());
		opencpsPersonStatisticImpl.setModifiedDate(getModifiedDate());
		opencpsPersonStatisticImpl.setMonth(getMonth());
		opencpsPersonStatisticImpl.setYear(getYear());
		opencpsPersonStatisticImpl.setGovAgencyCode(getGovAgencyCode());
		opencpsPersonStatisticImpl.setGovAgencyName(getGovAgencyName());
		opencpsPersonStatisticImpl.setEmployeeId(getEmployeeId());
		opencpsPersonStatisticImpl.setVotingCode(getVotingCode());
		opencpsPersonStatisticImpl.setVotingSubject(getVotingSubject());
		opencpsPersonStatisticImpl.setTotalVoted(getTotalVoted());
		opencpsPersonStatisticImpl.setVeryGoodCount(getVeryGoodCount());
		opencpsPersonStatisticImpl.setGoodCount(getGoodCount());
		opencpsPersonStatisticImpl.setBadCount(getBadCount());
		opencpsPersonStatisticImpl.setPercentVeryGood(getPercentVeryGood());
		opencpsPersonStatisticImpl.setPercentGood(getPercentGood());
		opencpsPersonStatisticImpl.setPercentBad(getPercentBad());
		opencpsPersonStatisticImpl.setTotalCount(getTotalCount());

		opencpsPersonStatisticImpl.resetOriginalValues();

		return opencpsPersonStatisticImpl;
	}

	@Override
	public int compareTo(OpencpsPersonStatistic opencpsPersonStatistic) {
		long primaryKey = opencpsPersonStatistic.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof OpencpsPersonStatistic)) {
			return false;
		}

		OpencpsPersonStatistic opencpsPersonStatistic = (OpencpsPersonStatistic)obj;

		long primaryKey = opencpsPersonStatistic.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		OpencpsPersonStatisticModelImpl opencpsPersonStatisticModelImpl = this;

		opencpsPersonStatisticModelImpl._originalUuid = opencpsPersonStatisticModelImpl._uuid;

		opencpsPersonStatisticModelImpl._originalCompanyId = opencpsPersonStatisticModelImpl._companyId;

		opencpsPersonStatisticModelImpl._setOriginalCompanyId = false;

		opencpsPersonStatisticModelImpl._originalGroupId = opencpsPersonStatisticModelImpl._groupId;

		opencpsPersonStatisticModelImpl._setOriginalGroupId = false;

		opencpsPersonStatisticModelImpl._originalUserId = opencpsPersonStatisticModelImpl._userId;

		opencpsPersonStatisticModelImpl._setOriginalUserId = false;

		opencpsPersonStatisticModelImpl._setModifiedDate = false;

		opencpsPersonStatisticModelImpl._originalMonth = opencpsPersonStatisticModelImpl._month;

		opencpsPersonStatisticModelImpl._setOriginalMonth = false;

		opencpsPersonStatisticModelImpl._originalYear = opencpsPersonStatisticModelImpl._year;

		opencpsPersonStatisticModelImpl._setOriginalYear = false;

		opencpsPersonStatisticModelImpl._originalGovAgencyCode = opencpsPersonStatisticModelImpl._govAgencyCode;

		opencpsPersonStatisticModelImpl._originalEmployeeId = opencpsPersonStatisticModelImpl._employeeId;

		opencpsPersonStatisticModelImpl._setOriginalEmployeeId = false;

		opencpsPersonStatisticModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<OpencpsPersonStatistic> toCacheModel() {
		OpencpsPersonStatisticCacheModel opencpsPersonStatisticCacheModel = new OpencpsPersonStatisticCacheModel();

		opencpsPersonStatisticCacheModel.uuid = getUuid();

		String uuid = opencpsPersonStatisticCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			opencpsPersonStatisticCacheModel.uuid = null;
		}

		opencpsPersonStatisticCacheModel.personStatisticId = getPersonStatisticId();

		opencpsPersonStatisticCacheModel.companyId = getCompanyId();

		opencpsPersonStatisticCacheModel.groupId = getGroupId();

		opencpsPersonStatisticCacheModel.userId = getUserId();

		opencpsPersonStatisticCacheModel.userName = getUserName();

		String userName = opencpsPersonStatisticCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			opencpsPersonStatisticCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			opencpsPersonStatisticCacheModel.createDate = createDate.getTime();
		}
		else {
			opencpsPersonStatisticCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			opencpsPersonStatisticCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			opencpsPersonStatisticCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		opencpsPersonStatisticCacheModel.month = getMonth();

		opencpsPersonStatisticCacheModel.year = getYear();

		opencpsPersonStatisticCacheModel.govAgencyCode = getGovAgencyCode();

		String govAgencyCode = opencpsPersonStatisticCacheModel.govAgencyCode;

		if ((govAgencyCode != null) && (govAgencyCode.length() == 0)) {
			opencpsPersonStatisticCacheModel.govAgencyCode = null;
		}

		opencpsPersonStatisticCacheModel.govAgencyName = getGovAgencyName();

		String govAgencyName = opencpsPersonStatisticCacheModel.govAgencyName;

		if ((govAgencyName != null) && (govAgencyName.length() == 0)) {
			opencpsPersonStatisticCacheModel.govAgencyName = null;
		}

		opencpsPersonStatisticCacheModel.employeeId = getEmployeeId();

		opencpsPersonStatisticCacheModel.votingCode = getVotingCode();

		String votingCode = opencpsPersonStatisticCacheModel.votingCode;

		if ((votingCode != null) && (votingCode.length() == 0)) {
			opencpsPersonStatisticCacheModel.votingCode = null;
		}

		opencpsPersonStatisticCacheModel.votingSubject = getVotingSubject();

		String votingSubject = opencpsPersonStatisticCacheModel.votingSubject;

		if ((votingSubject != null) && (votingSubject.length() == 0)) {
			opencpsPersonStatisticCacheModel.votingSubject = null;
		}

		opencpsPersonStatisticCacheModel.totalVoted = getTotalVoted();

		opencpsPersonStatisticCacheModel.veryGoodCount = getVeryGoodCount();

		opencpsPersonStatisticCacheModel.goodCount = getGoodCount();

		opencpsPersonStatisticCacheModel.badCount = getBadCount();

		opencpsPersonStatisticCacheModel.percentVeryGood = getPercentVeryGood();

		opencpsPersonStatisticCacheModel.percentGood = getPercentGood();

		opencpsPersonStatisticCacheModel.percentBad = getPercentBad();

		opencpsPersonStatisticCacheModel.totalCount = getTotalCount();

		return opencpsPersonStatisticCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(47);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", personStatisticId=");
		sb.append(getPersonStatisticId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", month=");
		sb.append(getMonth());
		sb.append(", year=");
		sb.append(getYear());
		sb.append(", govAgencyCode=");
		sb.append(getGovAgencyCode());
		sb.append(", govAgencyName=");
		sb.append(getGovAgencyName());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", votingCode=");
		sb.append(getVotingCode());
		sb.append(", votingSubject=");
		sb.append(getVotingSubject());
		sb.append(", totalVoted=");
		sb.append(getTotalVoted());
		sb.append(", veryGoodCount=");
		sb.append(getVeryGoodCount());
		sb.append(", goodCount=");
		sb.append(getGoodCount());
		sb.append(", badCount=");
		sb.append(getBadCount());
		sb.append(", percentVeryGood=");
		sb.append(getPercentVeryGood());
		sb.append(", percentGood=");
		sb.append(getPercentGood());
		sb.append(", percentBad=");
		sb.append(getPercentBad());
		sb.append(", totalCount=");
		sb.append(getTotalCount());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(73);

		sb.append("<model><model-name>");
		sb.append("org.opencps.statistic.model.OpencpsPersonStatistic");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>personStatisticId</column-name><column-value><![CDATA[");
		sb.append(getPersonStatisticId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>month</column-name><column-value><![CDATA[");
		sb.append(getMonth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>year</column-name><column-value><![CDATA[");
		sb.append(getYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyCode</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyName</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>votingCode</column-name><column-value><![CDATA[");
		sb.append(getVotingCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>votingSubject</column-name><column-value><![CDATA[");
		sb.append(getVotingSubject());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalVoted</column-name><column-value><![CDATA[");
		sb.append(getTotalVoted());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>veryGoodCount</column-name><column-value><![CDATA[");
		sb.append(getVeryGoodCount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>goodCount</column-name><column-value><![CDATA[");
		sb.append(getGoodCount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>badCount</column-name><column-value><![CDATA[");
		sb.append(getBadCount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>percentVeryGood</column-name><column-value><![CDATA[");
		sb.append(getPercentVeryGood());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>percentGood</column-name><column-value><![CDATA[");
		sb.append(getPercentGood());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>percentBad</column-name><column-value><![CDATA[");
		sb.append(getPercentBad());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalCount</column-name><column-value><![CDATA[");
		sb.append(getTotalCount());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = OpencpsPersonStatistic.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			OpencpsPersonStatistic.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _personStatisticId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private int _month;
	private int _originalMonth;
	private boolean _setOriginalMonth;
	private int _year;
	private int _originalYear;
	private boolean _setOriginalYear;
	private String _govAgencyCode;
	private String _originalGovAgencyCode;
	private String _govAgencyName;
	private long _employeeId;
	private long _originalEmployeeId;
	private boolean _setOriginalEmployeeId;
	private String _votingCode;
	private String _votingSubject;
	private int _totalVoted;
	private int _veryGoodCount;
	private int _goodCount;
	private int _badCount;
	private int _percentVeryGood;
	private int _percentGood;
	private int _percentBad;
	private int _totalCount;
	private long _columnBitmask;
	private OpencpsPersonStatistic _escapedModel;
}