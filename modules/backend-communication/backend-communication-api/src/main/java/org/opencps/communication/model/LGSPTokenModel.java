/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.communication.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the LGSPToken service. Represents a row in the &quot;opencps_lgsp_token&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.opencps.communication.model.impl.LGSPTokenModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.opencps.communication.model.impl.LGSPTokenImpl}.
 * </p>
 *
 * @author khoavd
 * @see LGSPToken
 * @see org.opencps.communication.model.impl.LGSPTokenImpl
 * @see org.opencps.communication.model.impl.LGSPTokenModelImpl
 * @generated
 */
@ProviderType
public interface LGSPTokenModel extends BaseModel<LGSPToken> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a lgsp token model instance should use the {@link LGSPToken} interface instead.
	 */

	/**
	 * Returns the primary key of this lgsp token.
	 *
	 * @return the primary key of this lgsp token
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this lgsp token.
	 *
	 * @param primaryKey the primary key of this lgsp token
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this lgsp token.
	 *
	 * @return the uuid of this lgsp token
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this lgsp token.
	 *
	 * @param uuid the uuid of this lgsp token
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the token ID of this lgsp token.
	 *
	 * @return the token ID of this lgsp token
	 */
	public long getTokenId();

	/**
	 * Sets the token ID of this lgsp token.
	 *
	 * @param tokenId the token ID of this lgsp token
	 */
	public void setTokenId(long tokenId);

	/**
	 * Returns the create date of this lgsp token.
	 *
	 * @return the create date of this lgsp token
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this lgsp token.
	 *
	 * @param createDate the create date of this lgsp token
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this lgsp token.
	 *
	 * @return the modified date of this lgsp token
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this lgsp token.
	 *
	 * @param modifiedDate the modified date of this lgsp token
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the token of this lgsp token.
	 *
	 * @return the token of this lgsp token
	 */
	@AutoEscape
	public String getToken();

	/**
	 * Sets the token of this lgsp token.
	 *
	 * @param token the token of this lgsp token
	 */
	public void setToken(String token);

	/**
	 * Returns the token type of this lgsp token.
	 *
	 * @return the token type of this lgsp token
	 */
	@AutoEscape
	public String getTokenType();

	/**
	 * Sets the token type of this lgsp token.
	 *
	 * @param tokenType the token type of this lgsp token
	 */
	public void setTokenType(String tokenType);

	/**
	 * Returns the refresh token of this lgsp token.
	 *
	 * @return the refresh token of this lgsp token
	 */
	@AutoEscape
	public String getRefreshToken();

	/**
	 * Sets the refresh token of this lgsp token.
	 *
	 * @param refreshToken the refresh token of this lgsp token
	 */
	public void setRefreshToken(String refreshToken);

	/**
	 * Returns the expiry date of this lgsp token.
	 *
	 * @return the expiry date of this lgsp token
	 */
	public Date getExpiryDate();

	/**
	 * Sets the expiry date of this lgsp token.
	 *
	 * @param expiryDate the expiry date of this lgsp token
	 */
	public void setExpiryDate(Date expiryDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(LGSPToken lgspToken);

	@Override
	public int hashCode();

	@Override
	public CacheModel<LGSPToken> toCacheModel();

	@Override
	public LGSPToken toEscapedModel();

	@Override
	public LGSPToken toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}