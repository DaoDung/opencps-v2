/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Notarization service. Represents a row in the &quot;opencps_notarization&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.opencps.dossiermgt.model.impl.NotarizationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.opencps.dossiermgt.model.impl.NotarizationImpl}.
 * </p>
 *
 * @author huymq
 * @see Notarization
 * @see org.opencps.dossiermgt.model.impl.NotarizationImpl
 * @see org.opencps.dossiermgt.model.impl.NotarizationModelImpl
 * @generated
 */
@ProviderType
public interface NotarizationModel extends BaseModel<Notarization>, GroupedModel,
	ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a notarization model instance should use the {@link Notarization} interface instead.
	 */

	/**
	 * Returns the primary key of this notarization.
	 *
	 * @return the primary key of this notarization
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this notarization.
	 *
	 * @param primaryKey the primary key of this notarization
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the notarization ID of this notarization.
	 *
	 * @return the notarization ID of this notarization
	 */
	public long getNotarizationId();

	/**
	 * Sets the notarization ID of this notarization.
	 *
	 * @param notarizationId the notarization ID of this notarization
	 */
	public void setNotarizationId(long notarizationId);

	/**
	 * Returns the group ID of this notarization.
	 *
	 * @return the group ID of this notarization
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this notarization.
	 *
	 * @param groupId the group ID of this notarization
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this notarization.
	 *
	 * @return the company ID of this notarization
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this notarization.
	 *
	 * @param companyId the company ID of this notarization
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this notarization.
	 *
	 * @return the user ID of this notarization
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this notarization.
	 *
	 * @param userId the user ID of this notarization
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this notarization.
	 *
	 * @return the user uuid of this notarization
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this notarization.
	 *
	 * @param userUuid the user uuid of this notarization
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this notarization.
	 *
	 * @return the user name of this notarization
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this notarization.
	 *
	 * @param userName the user name of this notarization
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this notarization.
	 *
	 * @return the create date of this notarization
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this notarization.
	 *
	 * @param createDate the create date of this notarization
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this notarization.
	 *
	 * @return the modified date of this notarization
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this notarization.
	 *
	 * @param modifiedDate the modified date of this notarization
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the dossier ID of this notarization.
	 *
	 * @return the dossier ID of this notarization
	 */
	public long getDossierId();

	/**
	 * Sets the dossier ID of this notarization.
	 *
	 * @param dossierId the dossier ID of this notarization
	 */
	public void setDossierId(long dossierId);

	/**
	 * Returns the file name of this notarization.
	 *
	 * @return the file name of this notarization
	 */
	@AutoEscape
	public String getFileName();

	/**
	 * Sets the file name of this notarization.
	 *
	 * @param fileName the file name of this notarization
	 */
	public void setFileName(String fileName);

	/**
	 * Returns the total record of this notarization.
	 *
	 * @return the total record of this notarization
	 */
	public int getTotalRecord();

	/**
	 * Sets the total record of this notarization.
	 *
	 * @param totalRecord the total record of this notarization
	 */
	public void setTotalRecord(int totalRecord);

	/**
	 * Returns the total page of this notarization.
	 *
	 * @return the total page of this notarization
	 */
	public int getTotalPage();

	/**
	 * Sets the total page of this notarization.
	 *
	 * @param totalPage the total page of this notarization
	 */
	public void setTotalPage(int totalPage);

	/**
	 * Returns the total copy of this notarization.
	 *
	 * @return the total copy of this notarization
	 */
	public int getTotalCopy();

	/**
	 * Sets the total copy of this notarization.
	 *
	 * @param totalCopy the total copy of this notarization
	 */
	public void setTotalCopy(int totalCopy);

	/**
	 * Returns the total fee of this notarization.
	 *
	 * @return the total fee of this notarization
	 */
	public long getTotalFee();

	/**
	 * Sets the total fee of this notarization.
	 *
	 * @param totalFee the total fee of this notarization
	 */
	public void setTotalFee(long totalFee);

	/**
	 * Returns the notarization no of this notarization.
	 *
	 * @return the notarization no of this notarization
	 */
	public long getNotarizationNo();

	/**
	 * Sets the notarization no of this notarization.
	 *
	 * @param notarizationNo the notarization no of this notarization
	 */
	public void setNotarizationNo(long notarizationNo);

	/**
	 * Returns the notarization year of this notarization.
	 *
	 * @return the notarization year of this notarization
	 */
	public int getNotarizationYear();

	/**
	 * Sets the notarization year of this notarization.
	 *
	 * @param notarizationYear the notarization year of this notarization
	 */
	public void setNotarizationYear(int notarizationYear);

	/**
	 * Returns the notarization date of this notarization.
	 *
	 * @return the notarization date of this notarization
	 */
	public Date getNotarizationDate();

	/**
	 * Sets the notarization date of this notarization.
	 *
	 * @param notarizationDate the notarization date of this notarization
	 */
	public void setNotarizationDate(Date notarizationDate);

	/**
	 * Returns the signer name of this notarization.
	 *
	 * @return the signer name of this notarization
	 */
	@AutoEscape
	public String getSignerName();

	/**
	 * Sets the signer name of this notarization.
	 *
	 * @param signerName the signer name of this notarization
	 */
	public void setSignerName(String signerName);

	/**
	 * Returns the signer position of this notarization.
	 *
	 * @return the signer position of this notarization
	 */
	@AutoEscape
	public String getSignerPosition();

	/**
	 * Sets the signer position of this notarization.
	 *
	 * @param signerPosition the signer position of this notarization
	 */
	public void setSignerPosition(String signerPosition);

	/**
	 * Returns the status code of this notarization.
	 *
	 * @return the status code of this notarization
	 */
	@AutoEscape
	public String getStatusCode();

	/**
	 * Sets the status code of this notarization.
	 *
	 * @param statusCode the status code of this notarization
	 */
	public void setStatusCode(String statusCode);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Notarization notarization);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Notarization> toCacheModel();

	@Override
	public Notarization toEscapedModel();

	@Override
	public Notarization toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}