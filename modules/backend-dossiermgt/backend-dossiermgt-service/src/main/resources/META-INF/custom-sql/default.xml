<?xml version="1.0" encoding="UTF-8"?>
<custom-sql>
    <sql id="org.opencps.dossiermgt.service.persistence.DossierActionFinder.findActionOverdue">
        <![CDATA[
            select userId as userId, count(DISTINCT(dossierId)) as soluonghoso from opencps_dossieraction 
				where modifiedDate >= ? and modifiedDate <= ? and groupId=?
				and actionOverdue > 0 or (dueDate IS NOT NULL and dueDate > CURDATE())
			group by userId
        ]]>
    </sql>
    <sql id="org.opencps.dossiermgt.service.persistence.DossierActionFinder.findActionUndue">
        <![CDATA[
            select userId as userId, count(DISTINCT(dossierId)) as soluonghoso from opencps_dossieraction 
				where modifiedDate >= ? and modifiedDate <= ? and groupId=?
				and actionOverdue = 0 or (dueDate IS NOT NULL and dueDate <= CURDATE())
			group by userId
        ]]>
    </sql>
    <sql id="org.opencps.dossiermgt.service.persistence.DossierActionFinder.findActionOverdueFuture">
        <![CDATA[
            select dau.userId, count(DISTINCT(da1.dossierId)) as soluonghoso from opencps_dossieraction as da1 
				inner join opencps_dossieractionuser as dau on dau.stepCode = da1.stepCode and dau.dossierActionId = da1.dossierActionId
				and modifiedDate= (select MAX(modifiedDate) from opencps_dossieraction as da2 where da1.dossierId = da2.dossierId)
				and da1.groupId=?
				and da1.dueDate > CURDATE()
			group by dau.userId;
        ]]>
    </sql>

    <sql id="org.opencps.dossiermgt.service.persistence.BookingFinder.findBookingDateOnline">
        <![CDATA[
            select bk.bookingId, bk.className, bk.classPK, bk.bookingDate, bk.bookingInTime from opencps_booking as bk 
			where groupId = ? and DATE(bookingDate) = ? and online_ = ? ORDER BY bookingId desc;
        ]]>
    </sql>
        <sql id="org.opencps.dossiermgt.service.persistence.NotarizationFinder.findAdvancedSearch">
        <![CDATA[
            select * from opencps_notarization where 1=1
            [$FILTER_GROUP_ID$]
            [$FILTER_DOSSIER_ID$]
            [$FILTER_FILENAME$]
            [$FILTER_TOTAL_RECORD$]
            [$FILTER_TOTAL_PAGE$]
            [$FILTER_TOTAL_COPY$]
            [$FILTER_TOTAL_FEE$]
            [$FILTER_NOTARIZATION_NO$]
            [$FILTER_NOTARIZATION_YEAR$]
            [$FILTER_NOTARIZATION_DATE$]
            [$FILTER_SIGNER_NAME$]
            [$FILTER_SIGNER_POSITION$]
            [$FILTER_STATUS_CODE$]
        ]]>
    </sql>    
    <sql id="org.opencps.dossiermgt.service.persistence.NotarizationFinder.countAdvancedSearch">
        <![CDATA[
            select count(*) as countnotarization from opencps_notarization where 1=1
            [$FILTER_GROUP_ID$]
            [$FILTER_DOSSIER_ID$]
            [$FILTER_FILENAME$]
            [$FILTER_TOTAL_RECORD$]
            [$FILTER_TOTAL_PAGE$]
            [$FILTER_TOTAL_COPY$]
            [$FILTER_TOTAL_FEE$]
            [$FILTER_NOTARIZATION_NO$]
            [$FILTER_NOTARIZATION_YEAR$]
            [$FILTER_NOTARIZATION_DATE$]
            [$FILTER_SIGNER_NAME$]
            [$FILTER_SIGNER_POSITION$]
            [$FILTER_STATUS_CODE$]
        ]]>
    </sql>
    <sql id="org.opencps.dossiermgt.service.persistence.DossierFinder.findDossierByDay">
        <![CDATA[
            SELECT d.*
            FROM   opencps_dossier AS d
            WHERE  DATE(d.createDate) = ?
        ]]>
    </sql>
    <sql id="org.opencps.dossiermgt.service.persistence.PaymentFileFinder.findSumPaymentAmountDay">
        <![CDATA[
            SELECT sum(p.paymentAmount) as sumPaymentAmount
            FROM   opencps_paymentfile AS p
            WHERE  p.paymentStatus = 5
                [$FILTER_GROUP_ID$]
                AND DATE(p.modifiedDate) = DATE([$DATE$]) ;
        ]]>
    </sql>
    <sql id="org.opencps.dossiermgt.service.persistence.DossierFinder.findDossierByDeclarationCode">
        <![CDATA[
            SELECT d.*, JSON_EXTRACT(metaData, "$.ma_to_khai") AS metaData
            FROM   opencps_dossier AS d
            WHERE replace(replace(JSON_EXTRACT(metaData, "$.ma_to_khai"),'["',''), '"]','') = ? and d.groupId  = ?;
        ]]>
    </sql>
    <sql id="org.opencps.dossiermgt.service.persistence.PaymentFileFinder.findPaymentByS_M">
        <![CDATA[
            SELECT opencps_paymentfile.*
            FROM   opencps_paymentfile 
            WHERE  
            	(opencps_paymentfile.paymentMethod = ?) AND 
				(opencps_paymentfile.paymentStatus = ?)
        ]]>
    </sql>
    <sql id="org.opencps.dossiermgt.service.persistence.PaymentFileFinder.findPaymentByG_S_M">
        <![CDATA[
            SELECT opencps_paymentfile.*
            FROM   opencps_paymentfile 
            WHERE  
            	(opencps_paymentfile.paymentMethod = ?) AND 
				(opencps_paymentfile.paymentStatus = ?) AND
				(opencps_paymentfile.groupId = ?)
        ]]>
    </sql>
    <sql id="org.opencps.dossiermgt.service.persistence.DossierFinder.findServiceConfigByServiceLevel">
        <![CDATA[
            select distinct t2.itemName, t2.itemCode, t2.groupId, t1.govAgencyCode, t1.serviceLevel from opencps_serviceConfig t1
            inner join opencps_dictitem t2 ON t1.govAgencyCode= t2.itemCode
            inner join opencps_dictcollection t3 ON t2.dictCollectionId = t3.dictCollectionId
            where t3.collectionCode = 'GOVERNMENT_AGENCY' and t1.serviceLevel in (?) and t1.groupId = ?;
        ]]>
    </sql>
    <sql id="org.opencps.dossiermgt.service.persistence.DictItemFinder.findDictItemByServiceDomain">
        <![CDATA[
             select distinct t2.itemName,t2.itemCode, t2.groupId, t1.govAgencyCode, t1.serviceLevel from opencps_dictcollection t1
            inner join opencps_dictitem t2 ON t1.dictCollectionId = t2.dictCollectionId
            inner join opencps_serviceinfo t3 on t2.itemCode = t3.domainCode
			 inner join opencps_serviceconfig t4 ON t3.serviceInfoId = t4.serviceInfoId
            where t1.collectionCode = 'SERVICE_DOMAIN'  and t4.serviceLevel in(?) and t1.groupId = ?;
        ]]>
    </sql>
</custom-sql>