/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import org.opencps.dossiermgt.model.MenuRole;
import org.opencps.dossiermgt.model.MenuRoleModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the MenuRole service. Represents a row in the &quot;opencps_menurole&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link MenuRoleModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MenuRoleImpl}.
 * </p>
 *
 * @author huymq
 * @see MenuRoleImpl
 * @see MenuRole
 * @see MenuRoleModel
 * @generated
 */
@ProviderType
public class MenuRoleModelImpl extends BaseModelImpl<MenuRole>
	implements MenuRoleModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a menu role model instance should use the {@link MenuRole} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_menurole";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "menuRoleId", Types.BIGINT },
			{ "menuConfigId", Types.BIGINT },
			{ "roleId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("menuRoleId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("menuConfigId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("roleId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_menurole (uuid_ VARCHAR(75) null,menuRoleId LONG not null primary key,menuConfigId LONG,roleId LONG)";
	public static final String TABLE_SQL_DROP = "drop table opencps_menurole";
	public static final String ORDER_BY_JPQL = " ORDER BY menuRole.menuRoleId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_menurole.menuRoleId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.dossiermgt.model.MenuRole"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.dossiermgt.model.MenuRole"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.dossiermgt.model.MenuRole"),
			true);
	public static final long MENUCONFIGID_COLUMN_BITMASK = 1L;
	public static final long MENUROLEID_COLUMN_BITMASK = 2L;
	public static final long ROLEID_COLUMN_BITMASK = 4L;
	public static final long UUID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.dossiermgt.model.MenuRole"));

	public MenuRoleModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _menuRoleId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMenuRoleId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _menuRoleId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MenuRole.class;
	}

	@Override
	public String getModelClassName() {
		return MenuRole.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("menuRoleId", getMenuRoleId());
		attributes.put("menuConfigId", getMenuConfigId());
		attributes.put("roleId", getRoleId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long menuRoleId = (Long)attributes.get("menuRoleId");

		if (menuRoleId != null) {
			setMenuRoleId(menuRoleId);
		}

		Long menuConfigId = (Long)attributes.get("menuConfigId");

		if (menuConfigId != null) {
			setMenuConfigId(menuConfigId);
		}

		Long roleId = (Long)attributes.get("roleId");

		if (roleId != null) {
			setRoleId(roleId);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getMenuRoleId() {
		return _menuRoleId;
	}

	@Override
	public void setMenuRoleId(long menuRoleId) {
		_columnBitmask |= MENUROLEID_COLUMN_BITMASK;

		if (!_setOriginalMenuRoleId) {
			_setOriginalMenuRoleId = true;

			_originalMenuRoleId = _menuRoleId;
		}

		_menuRoleId = menuRoleId;
	}

	public long getOriginalMenuRoleId() {
		return _originalMenuRoleId;
	}

	@Override
	public long getMenuConfigId() {
		return _menuConfigId;
	}

	@Override
	public void setMenuConfigId(long menuConfigId) {
		_columnBitmask |= MENUCONFIGID_COLUMN_BITMASK;

		if (!_setOriginalMenuConfigId) {
			_setOriginalMenuConfigId = true;

			_originalMenuConfigId = _menuConfigId;
		}

		_menuConfigId = menuConfigId;
	}

	public long getOriginalMenuConfigId() {
		return _originalMenuConfigId;
	}

	@Override
	public long getRoleId() {
		return _roleId;
	}

	@Override
	public void setRoleId(long roleId) {
		_columnBitmask |= ROLEID_COLUMN_BITMASK;

		if (!_setOriginalRoleId) {
			_setOriginalRoleId = true;

			_originalRoleId = _roleId;
		}

		_roleId = roleId;
	}

	public long getOriginalRoleId() {
		return _originalRoleId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			MenuRole.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MenuRole toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (MenuRole)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MenuRoleImpl menuRoleImpl = new MenuRoleImpl();

		menuRoleImpl.setUuid(getUuid());
		menuRoleImpl.setMenuRoleId(getMenuRoleId());
		menuRoleImpl.setMenuConfigId(getMenuConfigId());
		menuRoleImpl.setRoleId(getRoleId());

		menuRoleImpl.resetOriginalValues();

		return menuRoleImpl;
	}

	@Override
	public int compareTo(MenuRole menuRole) {
		long primaryKey = menuRole.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof MenuRole)) {
			return false;
		}

		MenuRole menuRole = (MenuRole)obj;

		long primaryKey = menuRole.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		MenuRoleModelImpl menuRoleModelImpl = this;

		menuRoleModelImpl._originalUuid = menuRoleModelImpl._uuid;

		menuRoleModelImpl._originalMenuRoleId = menuRoleModelImpl._menuRoleId;

		menuRoleModelImpl._setOriginalMenuRoleId = false;

		menuRoleModelImpl._originalMenuConfigId = menuRoleModelImpl._menuConfigId;

		menuRoleModelImpl._setOriginalMenuConfigId = false;

		menuRoleModelImpl._originalRoleId = menuRoleModelImpl._roleId;

		menuRoleModelImpl._setOriginalRoleId = false;

		menuRoleModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<MenuRole> toCacheModel() {
		MenuRoleCacheModel menuRoleCacheModel = new MenuRoleCacheModel();

		menuRoleCacheModel.uuid = getUuid();

		String uuid = menuRoleCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			menuRoleCacheModel.uuid = null;
		}

		menuRoleCacheModel.menuRoleId = getMenuRoleId();

		menuRoleCacheModel.menuConfigId = getMenuConfigId();

		menuRoleCacheModel.roleId = getRoleId();

		return menuRoleCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", menuRoleId=");
		sb.append(getMenuRoleId());
		sb.append(", menuConfigId=");
		sb.append(getMenuConfigId());
		sb.append(", roleId=");
		sb.append(getRoleId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("org.opencps.dossiermgt.model.MenuRole");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>menuRoleId</column-name><column-value><![CDATA[");
		sb.append(getMenuRoleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>menuConfigId</column-name><column-value><![CDATA[");
		sb.append(getMenuConfigId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>roleId</column-name><column-value><![CDATA[");
		sb.append(getRoleId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = MenuRole.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			MenuRole.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _menuRoleId;
	private long _originalMenuRoleId;
	private boolean _setOriginalMenuRoleId;
	private long _menuConfigId;
	private long _originalMenuConfigId;
	private boolean _setOriginalMenuConfigId;
	private long _roleId;
	private long _originalRoleId;
	private boolean _setOriginalRoleId;
	private long _columnBitmask;
	private MenuRole _escapedModel;
}