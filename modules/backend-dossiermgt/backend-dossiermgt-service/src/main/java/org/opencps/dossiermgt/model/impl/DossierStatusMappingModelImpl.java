/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import org.opencps.dossiermgt.model.DossierStatusMapping;
import org.opencps.dossiermgt.model.DossierStatusMappingModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the DossierStatusMapping service. Represents a row in the &quot;opencps_dossierstatusmapping&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link DossierStatusMappingModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DossierStatusMappingImpl}.
 * </p>
 *
 * @author huymq
 * @see DossierStatusMappingImpl
 * @see DossierStatusMapping
 * @see DossierStatusMappingModel
 * @generated
 */
@ProviderType
public class DossierStatusMappingModelImpl extends BaseModelImpl<DossierStatusMapping>
	implements DossierStatusMappingModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dossier status mapping model instance should use the {@link DossierStatusMapping} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_dossierstatusmapping";
	public static final Object[][] TABLE_COLUMNS = {
			{ "dossierStatusMappingId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "statusCode", Types.VARCHAR },
			{ "statusCodeDVCQG", Types.VARCHAR },
			{ "subStatusCode", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("dossierStatusMappingId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("statusCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusCodeDVCQG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("subStatusCode", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_dossierstatusmapping (dossierStatusMappingId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(255) null,createDate DATE null,modifiedDate DATE null,statusCode VARCHAR(75) null,statusCodeDVCQG VARCHAR(128) null,subStatusCode VARCHAR(128) null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_dossierstatusmapping";
	public static final String ORDER_BY_JPQL = " ORDER BY dossierStatusMapping.dossierStatusMappingId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_dossierstatusmapping.dossierStatusMappingId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.dossiermgt.model.DossierStatusMapping"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.dossiermgt.model.DossierStatusMapping"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.dossiermgt.model.DossierStatusMapping"),
			true);
	public static final long GROUPID_COLUMN_BITMASK = 1L;
	public static final long STATUSCODE_COLUMN_BITMASK = 2L;
	public static final long STATUSCODEDVCQG_COLUMN_BITMASK = 4L;
	public static final long SUBSTATUSCODE_COLUMN_BITMASK = 8L;
	public static final long DOSSIERSTATUSMAPPINGID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.dossiermgt.model.DossierStatusMapping"));

	public DossierStatusMappingModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _dossierStatusMappingId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDossierStatusMappingId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _dossierStatusMappingId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DossierStatusMapping.class;
	}

	@Override
	public String getModelClassName() {
		return DossierStatusMapping.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("dossierStatusMappingId", getDossierStatusMappingId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("statusCode", getStatusCode());
		attributes.put("statusCodeDVCQG", getStatusCodeDVCQG());
		attributes.put("subStatusCode", getSubStatusCode());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long dossierStatusMappingId = (Long)attributes.get(
				"dossierStatusMappingId");

		if (dossierStatusMappingId != null) {
			setDossierStatusMappingId(dossierStatusMappingId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String statusCode = (String)attributes.get("statusCode");

		if (statusCode != null) {
			setStatusCode(statusCode);
		}

		String statusCodeDVCQG = (String)attributes.get("statusCodeDVCQG");

		if (statusCodeDVCQG != null) {
			setStatusCodeDVCQG(statusCodeDVCQG);
		}

		String subStatusCode = (String)attributes.get("subStatusCode");

		if (subStatusCode != null) {
			setSubStatusCode(subStatusCode);
		}
	}

	@Override
	public long getDossierStatusMappingId() {
		return _dossierStatusMappingId;
	}

	@Override
	public void setDossierStatusMappingId(long dossierStatusMappingId) {
		_dossierStatusMappingId = dossierStatusMappingId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getStatusCode() {
		if (_statusCode == null) {
			return "";
		}
		else {
			return _statusCode;
		}
	}

	@Override
	public void setStatusCode(String statusCode) {
		_columnBitmask |= STATUSCODE_COLUMN_BITMASK;

		if (_originalStatusCode == null) {
			_originalStatusCode = _statusCode;
		}

		_statusCode = statusCode;
	}

	public String getOriginalStatusCode() {
		return GetterUtil.getString(_originalStatusCode);
	}

	@Override
	public String getStatusCodeDVCQG() {
		if (_statusCodeDVCQG == null) {
			return "";
		}
		else {
			return _statusCodeDVCQG;
		}
	}

	@Override
	public void setStatusCodeDVCQG(String statusCodeDVCQG) {
		_columnBitmask |= STATUSCODEDVCQG_COLUMN_BITMASK;

		if (_originalStatusCodeDVCQG == null) {
			_originalStatusCodeDVCQG = _statusCodeDVCQG;
		}

		_statusCodeDVCQG = statusCodeDVCQG;
	}

	public String getOriginalStatusCodeDVCQG() {
		return GetterUtil.getString(_originalStatusCodeDVCQG);
	}

	@Override
	public String getSubStatusCode() {
		if (_subStatusCode == null) {
			return "";
		}
		else {
			return _subStatusCode;
		}
	}

	@Override
	public void setSubStatusCode(String subStatusCode) {
		_columnBitmask |= SUBSTATUSCODE_COLUMN_BITMASK;

		if (_originalSubStatusCode == null) {
			_originalSubStatusCode = _subStatusCode;
		}

		_subStatusCode = subStatusCode;
	}

	public String getOriginalSubStatusCode() {
		return GetterUtil.getString(_originalSubStatusCode);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			DossierStatusMapping.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DossierStatusMapping toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DossierStatusMapping)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DossierStatusMappingImpl dossierStatusMappingImpl = new DossierStatusMappingImpl();

		dossierStatusMappingImpl.setDossierStatusMappingId(getDossierStatusMappingId());
		dossierStatusMappingImpl.setGroupId(getGroupId());
		dossierStatusMappingImpl.setCompanyId(getCompanyId());
		dossierStatusMappingImpl.setUserId(getUserId());
		dossierStatusMappingImpl.setUserName(getUserName());
		dossierStatusMappingImpl.setCreateDate(getCreateDate());
		dossierStatusMappingImpl.setModifiedDate(getModifiedDate());
		dossierStatusMappingImpl.setStatusCode(getStatusCode());
		dossierStatusMappingImpl.setStatusCodeDVCQG(getStatusCodeDVCQG());
		dossierStatusMappingImpl.setSubStatusCode(getSubStatusCode());

		dossierStatusMappingImpl.resetOriginalValues();

		return dossierStatusMappingImpl;
	}

	@Override
	public int compareTo(DossierStatusMapping dossierStatusMapping) {
		long primaryKey = dossierStatusMapping.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DossierStatusMapping)) {
			return false;
		}

		DossierStatusMapping dossierStatusMapping = (DossierStatusMapping)obj;

		long primaryKey = dossierStatusMapping.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		DossierStatusMappingModelImpl dossierStatusMappingModelImpl = this;

		dossierStatusMappingModelImpl._originalGroupId = dossierStatusMappingModelImpl._groupId;

		dossierStatusMappingModelImpl._setOriginalGroupId = false;

		dossierStatusMappingModelImpl._setModifiedDate = false;

		dossierStatusMappingModelImpl._originalStatusCode = dossierStatusMappingModelImpl._statusCode;

		dossierStatusMappingModelImpl._originalStatusCodeDVCQG = dossierStatusMappingModelImpl._statusCodeDVCQG;

		dossierStatusMappingModelImpl._originalSubStatusCode = dossierStatusMappingModelImpl._subStatusCode;

		dossierStatusMappingModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DossierStatusMapping> toCacheModel() {
		DossierStatusMappingCacheModel dossierStatusMappingCacheModel = new DossierStatusMappingCacheModel();

		dossierStatusMappingCacheModel.dossierStatusMappingId = getDossierStatusMappingId();

		dossierStatusMappingCacheModel.groupId = getGroupId();

		dossierStatusMappingCacheModel.companyId = getCompanyId();

		dossierStatusMappingCacheModel.userId = getUserId();

		dossierStatusMappingCacheModel.userName = getUserName();

		String userName = dossierStatusMappingCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			dossierStatusMappingCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			dossierStatusMappingCacheModel.createDate = createDate.getTime();
		}
		else {
			dossierStatusMappingCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			dossierStatusMappingCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			dossierStatusMappingCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		dossierStatusMappingCacheModel.statusCode = getStatusCode();

		String statusCode = dossierStatusMappingCacheModel.statusCode;

		if ((statusCode != null) && (statusCode.length() == 0)) {
			dossierStatusMappingCacheModel.statusCode = null;
		}

		dossierStatusMappingCacheModel.statusCodeDVCQG = getStatusCodeDVCQG();

		String statusCodeDVCQG = dossierStatusMappingCacheModel.statusCodeDVCQG;

		if ((statusCodeDVCQG != null) && (statusCodeDVCQG.length() == 0)) {
			dossierStatusMappingCacheModel.statusCodeDVCQG = null;
		}

		dossierStatusMappingCacheModel.subStatusCode = getSubStatusCode();

		String subStatusCode = dossierStatusMappingCacheModel.subStatusCode;

		if ((subStatusCode != null) && (subStatusCode.length() == 0)) {
			dossierStatusMappingCacheModel.subStatusCode = null;
		}

		return dossierStatusMappingCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{dossierStatusMappingId=");
		sb.append(getDossierStatusMappingId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", statusCode=");
		sb.append(getStatusCode());
		sb.append(", statusCodeDVCQG=");
		sb.append(getStatusCodeDVCQG());
		sb.append(", subStatusCode=");
		sb.append(getSubStatusCode());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("org.opencps.dossiermgt.model.DossierStatusMapping");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>dossierStatusMappingId</column-name><column-value><![CDATA[");
		sb.append(getDossierStatusMappingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusCode</column-name><column-value><![CDATA[");
		sb.append(getStatusCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusCodeDVCQG</column-name><column-value><![CDATA[");
		sb.append(getStatusCodeDVCQG());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subStatusCode</column-name><column-value><![CDATA[");
		sb.append(getSubStatusCode());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = DossierStatusMapping.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			DossierStatusMapping.class, ModelWrapper.class
		};
	private long _dossierStatusMappingId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _statusCode;
	private String _originalStatusCode;
	private String _statusCodeDVCQG;
	private String _originalStatusCodeDVCQG;
	private String _subStatusCode;
	private String _originalSubStatusCode;
	private long _columnBitmask;
	private DossierStatusMapping _escapedModel;
}