/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.opencps.api.controller;

import com.liferay.portal.kernel.exception.SystemException;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.opencps.api.model.UsersUserItem;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-10-04T01:52:35.852Z")

@Api(value = "users", description = "the users API")
public interface UsersApi {

	@ApiOperation(value = "Lấy thông tin thành phần cấu hình của user", nickname = "getUseKeyPreferencesById", notes = "Lấy thông tin thành phần cấu hình của user", response = String.class, tags={ "Users", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Lấy thông tin thành phần cấu hình user thành công", response = String.class),
        @ApiResponse(code = 400, message = "Tham số truyền vào không hợp lệ") })
    @RequestMapping(value = "/users/{id}/preferences/{key}",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<String> getUseKeyPreferencesById(@ApiParam(value = "id của user",required=true) @PathVariable("id") String id,@ApiParam(value = "key của preferences",required=true) @PathVariable("key") String key);


    @ApiOperation(value = "Lấy ảnh đại diện của user", nickname = "getUsePhotorById", notes = "Lấy ảnh đại diện của user", response = byte[].class, tags={ "Users", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Lấy ảnh đại diện user thành công", response = byte[].class),
        @ApiResponse(code = 400, message = "Tham số truyền vào không hợp lệ") })
    @RequestMapping(value = "/users/{id}/photo",
        method = RequestMethod.GET)
    ResponseEntity<byte[]> getUsePhotorById(@ApiParam(value = "id của user",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "Lấy thông tin cấu hình của user", nickname = "getUsePreferencesById", notes = "Lấy thông tin cấu hình của user", response = String.class, tags={ "Users", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Lấy thông tin cấu hình user thành công", response = String.class),
        @ApiResponse(code = 400, message = "Tham số truyền vào không hợp lệ") })
    @RequestMapping(value = "/users/{id}/preferences",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<String> getUsePreferencesById(@ApiParam(value = "id của user",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "Lấy thông tin chi tiết của user", nickname = "getUserById", notes = "Lấy thông tin chi tiết của user", response = UsersUserItem.class, tags={ "Users", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Lấy thông tin chi tiết user thành công", response = UsersUserItem.class),
        @ApiResponse(code = 400, message = "Tham số truyền vào không hợp lệ") })
    @RequestMapping(value = "/users/{id}",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<UsersUserItem> getUserById(@ApiParam(value = "id của user",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "Cập nhật thông tin cấu hình của user", nickname = "putUsePreferencesById", notes = "Cập nhật thông tin cấu hình của user", tags={ "Users", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Cập nhật thông tin cấu hình user thành công"),
        @ApiResponse(code = 400, message = "Tham số truyền vào không hợp lệ") })
    @RequestMapping(value = "/users/{id}/preferences",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> putUsePreferencesById(@ApiParam(value = "id của user",required=true) @PathVariable("id") String id,@ApiParam(value = ""  )  @RequestBody String body);
    
}
